name: Test Codebase

on:
  push:
    paths:
      - "cluster_purger/**"
      - "poetry.lock"
      - ".github/workflows/tests.yml"
    tags-ignore:
      - '**'


env:
  PACKAGE_PATH: cluster_purger
  IMAGE_NAME: ghcr.io/kitconcept/cluster-purger
  PYTHON_VERSION: 3.11

jobs:

  test-codebase:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'poetry'

      - name: "Install Packages"
        run: poetry install

      - name: "Black"
        run: poetry run black --check --diff ${{ env.PACKAGE_PATH }}

      - name: "iSort"
        run: poetry isort --check-only ${{ env.PACKAGE_PATH }}

      - name: "Flake 8"
        run: poetry flakeheaven lint ${{ env.PACKAGE_PATH }}

      - name: "Test Codebase"
        run: poetry run pytest

  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - test-codebase

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{ is_default_branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
